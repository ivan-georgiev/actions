name: shared_deployenv
on:
  workflow_call:
    inputs:  
      environment:
        description: 'Environment name'
        required: true
        type: string
      site:
        description: 'primary or secondary'
        required: true
        type: string
      mode:
        description: 'minimal or complete'
        required: true
        type: string             
jobs:
  setupMatrix:
    runs-on: ubuntu-latest
    outputs:
      stackGroups: ${{ steps.create-matrix.outputs.stackGroups }}
      stacks: ${{ steps.create-matrix.outputs.stacks }}
    steps:
      - name: Dynamically create ordered paralell groups
        id: create-matrix
        working-directory: .
        shell: pwsh
        run: |
          # input: environment
          
          # result
          $stacks = [ordered]@{
            'groupA' = @('a', 'b', 'c')
            'groupB' = @('d', 'e')
            'groupC' = @('F')
          }

          # output
          $stacksJson = $stacks | ConvertTo-Json -Compress
          "stacks=$stacksJson" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          $stackGroupsJson = $stacks.GetEnumerator().Name | ConvertTo-Json -Compress
          "stackGroups=$stackGroupsJson" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          
  deploy-many-stacks:
    uses: ./.github/workflows/shared_manystacks.yaml
    needs: setupMatrix
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        stackGroup:  ${{ fromJson(needs.setupMatrix.outputs.stackGroups) }}
    with:
      stackList: ${{ toJson(fromJson(needs.setupMatrix.outputs.stacks)[matrix.stackGroup]) }}
      environment: ${{ inputs.environment }}
      site: ${{ inputs.site }}
      mode: ${{ inputs.mode }}